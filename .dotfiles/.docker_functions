### Docker Functions

docker_bash() {
    # Bash into running container
    docker exec -it $(docker ps -aqf "name=$1") /bin/bash;
}

docker_ispect() {
    for container in "$@"; do
        docker inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}" "${container}";
    done
}


docker_stop() {
    if [ $# -eq 0 ]; then
        docker stop $(docker ps -aq --no-trunc);
    else
        for container in "$@"; do
            docker stop $(docker ps -aq --no-trunc | grep ${container});
        done
    fi
}

docker_rm_containers() {
    if [ $# -eq 0 ];then
        docker rm $(docker ps -aq --no-trunc);
    else
        for container in "$@"; do
            docker rm $(docker ps -aq --no-trunc | grep ${container});
        done
    fi
}


docker_rm_images() {
    if [ $# -eq 0 ]; then
        docker rmi $(docker images --filter 'dangling=true' -aq --no-trunc);
    else
        for container in "$@"; do
            docker rmi $(docker images --filter 'dangling=true' -aq --no-trunc | grep ${container});
        done
    fi
}

docker_push() {
    docker tag $1 $1
    docker push $1
}

docker_security() {
    docker run --rm --net host --pid host --userns host --cap-add audit_control \
    -e DOCKER_CONTENT_TRUST=$DOCKER_CONTENT_TRUST \
    -v /etc:/etc:ro \
    -v /usr/bin/containerd:/usr/bin/containerd:ro \
    -v /usr/bin/runc:/usr/bin/runc:ro \
    -v /usr/lib/systemd:/usr/lib/systemd:ro \
    -v /var/lib:/var/lib:ro \
    -v /var/run/docker.sock:/var/run/docker.sock:ro \
    --label docker_bench_security \
    docker/docker-bench-security
}
